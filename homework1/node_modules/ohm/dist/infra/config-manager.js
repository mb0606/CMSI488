'use strict';

var PATH = require('path');
var ROOT = '../';
var baseManager = require('./base-manager');
var compression = require('compression');
var methodOverride = require('method-override');
var bodyParser = require('body-parser');
var errorHandler = require('errorhandler');
var logger = require('morgan');
var helmet = require('helmet');
var express = require('express');
var configManager = Object.assign({}, baseManager, {
  configureCommon: function configureCommon(nconf, app, io) {
    app.use(compression());
    app.use(methodOverride());
    app.set('view engine', 'pug');
    app.set('views', nconf.get('VIEWS_PATH') || PATH.join(__dirname, ROOT, nconf.get('VIEWS_DIR')));
    app.use(bodyParser.urlencoded({
      extended: true
    }));
    app.use(bodyParser.json({ strict: false }));
    app.locals.config = nconf.get();
    app.use(helmet());
    app.use(express.static(nconf.get('STATIC_PATH')));
    app.use(function (req, res, next) {
      return next();
    });
  },
  configureProductionEnv: function configureProductionEnv(nconf, app, io) {
    app.locals.pretty = false;
    app.use(logger('combined'));
    app.use(errorHandler());
    app.enable('trust proxy');
  },
  configureDevelopmentEnv: function configureDevelopmentEnv(nconf, app, io) {
    app.locals.pretty = true;
    app.use(logger('dev'));
    require('longjohn');
    app.use(errorHandler({
      dumpExceptions: true,
      showStack: true
    }));
  }
});

module.exports = configManager;